[{"C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\index.js":"1","C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\App.js":"2","C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\components\\Dashboard.Component.js":"3","C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\components\\Sidebar.Component.js":"4","C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\contexts\\Data.Context.js":"5","C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\reducers\\Data.Reducer.js":"6","C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\components\\dashboard\\AnalyticsDash.Component.js":"7","C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\components\\dashboard\\SimulationDash.Component.js":"8","C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\components\\dashboard\\TextCard.Component.js":"9","C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\components\\dashboard\\LineGraphCard.Component.js":"10","C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\components\\dashboard\\SimulationResults.Component.js":"11","C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\components\\dashboard\\TextBoxCard.Component.js":"12","C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\components\\dashboard\\SimulationHistCard.Component.js":"13","C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\components\\dashboard\\TableCard.Component.js":"14"},{"size":219,"mtime":1606790884019,"results":"15","hashOfConfig":"16"},{"size":709,"mtime":1606804106597,"results":"17","hashOfConfig":"16"},{"size":3337,"mtime":1606970467135,"results":"18","hashOfConfig":"16"},{"size":1730,"mtime":1606970516937,"results":"19","hashOfConfig":"16"},{"size":467,"mtime":1606803755517,"results":"20","hashOfConfig":"16"},{"size":206,"mtime":1606804175820,"results":"21","hashOfConfig":"16"},{"size":1002,"mtime":1606921332360,"results":"22","hashOfConfig":"16"},{"size":3086,"mtime":1606972552669,"results":"23","hashOfConfig":"16"},{"size":306,"mtime":1606919895741,"results":"24","hashOfConfig":"16"},{"size":1164,"mtime":1606939925360,"results":"25","hashOfConfig":"16"},{"size":2656,"mtime":1606974191938,"results":"26","hashOfConfig":"16"},{"size":385,"mtime":1606919947051,"results":"27","hashOfConfig":"16"},{"size":1186,"mtime":1606974234634,"results":"28","hashOfConfig":"16"},{"size":4090,"mtime":1606973675681,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"18wy0g8",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\index.js",[],["64","65"],"C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\App.js",["66","67"],"import logo from \"./logo.svg\";\nimport {\n  BrowserRouter as Router, Switch, Route, Link\n} from \"react-router-dom\";\n\nimport DataContextProvider from \"./contexts/Data.Context\"\nimport Dashboard from \"./components/Dashboard.Component\"\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\">\n                    <div>\n                        <p className=\"text-7xl\">Hello World!</p>\n                    </div>\n                </Route>\n                <DataContextProvider>\n                    <Route path=\"/dashboard/:name\" children={ <Dashboard /> } />\n                </DataContextProvider>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\components\\Dashboard.Component.js",["68","69"],"import React, { useEffect, useState, useContext } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nimport { DataContext } from \"../contexts/Data.Context\"\r\nimport Sidebar from \"./Sidebar.Component.js\"\r\nimport AnalyticsDash from \"./dashboard/AnalyticsDash.Component\"\r\nimport SimulationDash from \"./dashboard/SimulationDash.Component\"\r\n\r\nimport AnalyticsData from \"../data/data.json\"\r\n\r\nconst Dashboard = () => {\r\n    let { name } = useParams()\r\n    const [period, setPeriod] = useState(null)\r\n    const [menu, setMenu] = useState([\r\n        {name: \"Analytics\", inFocus: true, disabled: false},\r\n        {name: \"Simulation\", inFocus: false, disabled: false},\r\n    ])\r\n    const [show, setShow] = useState(null)\r\n    const { userData, dispatch } = useContext(DataContext)\r\n\r\n    // Import Data: Similar to componentDidMount\r\n    useEffect(() => {\r\n        if (!(name in userData)) {\r\n            console.log('run initial useEffect')\r\n            console.log(name)\r\n            dispatch({\r\n                type: \"IMPORT_DATA\",\r\n                name: name,\r\n                data: AnalyticsData\r\n            })\r\n        }\r\n    })\r\n\r\n    // Set a default period to show\r\n    useEffect(() => {\r\n        if (Object.keys(userData).length === 0) return\r\n        setPeriod(Object.keys(userData[name])[0])\r\n    }, [userData])\r\n\r\n    // Change \"show\" state when the menu is updated by sidebar\r\n    useEffect(() => {\r\n        for (const item of menu) {\r\n            if (item.inFocus === true) setShow(item.name)\r\n        }\r\n    }, [menu])\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(userData).length === 0) return\r\n\r\n        // Unavailable menu items must be disabled.\r\n        let newMenu = [...menu]\r\n        for (const item of newMenu) {\r\n            console.log(userData)\r\n            if (Object.keys(userData[name][period][item.name.toLowerCase()]).length === 0) {\r\n                item.disabled = true\r\n                item.inFocus = false\r\n            }\r\n            else item.disabled = false\r\n        }\r\n        // If no items are inFocus:\r\n        if (newMenu.filter(item => item.inFocus === true).length === 0) {\r\n            for (const item of newMenu) {\r\n                if (item.disabled === false) {\r\n                    item.inFocus = true\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        setMenu(newMenu)\r\n    }, [period])\r\n\r\n    if (!(name in userData) || (period === null)) return <p>Loading...</p>\r\n\r\n    if (Object.keys(userData[name][period][show.toLowerCase()]).length === 0) return <p>Loading...</p>\r\n\r\n    return (\r\n        <div className=\"pt-5 grid sm:grid-cols-4 lg:grid-cols-6\">\r\n            <div className=\"sm:col-span-1 lg:col-span-1\">\r\n                <Sidebar\r\n                    name={name}\r\n                    allPeriods={Object.keys(userData[name])} currentPeriod={period} setPeriod={setPeriod}\r\n                    menu={menu} setMenu={setMenu}\r\n                />\r\n            </div>\r\n            <div className=\"sm:col-span-3 lg:col-span-5\">\r\n                {(show === \"Analytics\") ? (\r\n                    <AnalyticsDash data={userData[name][period].analytics} />\r\n                ) :\r\n                    <SimulationDash data={userData[name][period].simulation} />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\components\\Sidebar.Component.js",[],"C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\contexts\\Data.Context.js",["70"],"import React, { createContext, useReducer, useEffect } from \"react\"\r\nimport { dataReducer } from \"../reducers/Data.Reducer\"\r\n\r\nexport const DataContext = createContext()\r\n\r\nconst DataContextProvider = (props) => {\r\n    const [userData, dispatch] = useReducer(dataReducer, {})\r\n\r\n    return (\r\n        <DataContext.Provider value={{userData, dispatch}}>\r\n            { props.children }\r\n        </DataContext.Provider>\r\n    )\r\n}\r\n\r\nexport default DataContextProvider\r\n","C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\reducers\\Data.Reducer.js",["71"],"export const dataReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"IMPORT_DATA\":\r\n            return {...state,\r\n                [action.name]: action.data\r\n            }\r\n    }\r\n}\r\n","C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\components\\dashboard\\AnalyticsDash.Component.js",[],"C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\components\\dashboard\\SimulationDash.Component.js",[],"C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\components\\dashboard\\TextCard.Component.js",[],"C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\components\\dashboard\\LineGraphCard.Component.js",[],"C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\components\\dashboard\\SimulationResults.Component.js",["72","73"],"import React, { useRef } from \"react\"\r\nimport { ResponsiveContainer, BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Bar, Cell } from \"recharts\"\r\n\r\n// const CustomBar = (props) => {\r\n//     const {name, fill} = props;\r\n//     //business logic here to update fill color explicitly\r\n//     console.log(name)\r\n//\r\n//     //use explicit fill here, or use the additional css class and make a css selector to update fill there\r\n//     return <Rectangle {...props} fill=\"#60A5FA\" className={\"recharts-bar-rectangle \"+name} />\r\n// };\r\n\r\nconst SimulationResults = ({statement, baseStats, adjustedStats}) => {\r\n    const targetRef = useRef()\r\n    const results_data = [\r\n        {\"name\": \"Base\", \"Avg. Daily Profit\": parseFloat(baseStats.average_profit.substring(1))},\r\n        {\"name\": \"Adjusted\", \"Avg. Daily Profit\": parseFloat(adjustedStats.average_profit.substring(1))}\r\n    ]\r\n    let graphAspect = 5\r\n    let barHeight = \"55%\"\r\n    if (window.innerWidth < 640) {\r\n        graphAspect = 2\r\n        barHeight = \"40%\"\r\n    } else if (window.innerWidth < 1200) barHeight = \"40%\"\r\n    else if (window.innerWidth < 1600) barHeight = \"45%\"\r\n    console.log(graphAspect)\r\n    // Note: ResponsiveContainer does not work well with horizontal bar charts. Try height=100%\r\n    //       to test the problem. The workaround is to adjust height percentage for different\r\n    //       screen sizes. Ugly, but still kinda works.\r\n\r\n    return (\r\n        <>\r\n            <p className=\"pl-2 mb-4 text-left border-l-4 border-blue-500\">Results</p>\r\n            <ResponsiveContainer aspect={graphAspect} height={barHeight}>\r\n                <BarChart\r\n                    data={results_data} layout=\"vertical\"\r\n                    margin={{ top: 0, right: 20, left: 20, bottom: 0 }}\r\n                >\r\n                    <XAxis type=\"number\" tickFormatter={(num) => \"$\"+num}/>\r\n                    <YAxis type=\"category\" dataKey=\"name\"/>\r\n                    <Tooltip\r\n                        formatter={(value,name,props) => \"$\"+value.toString()}\r\n                        labelFormatter={(x) => \"\"}\r\n                    />\r\n\r\n                    <Bar dataKey=\"Avg. Daily Profit\" maxBarSize={25}>\r\n                        {\r\n                            results_data.map((entry, index) => (\r\n                                <Cell fill={results_data[index].name === \"Base\" ? '#60A5FA' : '#2563EB' } key={index}/>\r\n                            ))\r\n                        }\r\n                    </Bar>\r\n\r\n                </BarChart>\r\n            </ResponsiveContainer>\r\n            <p className=\"px-2 py-2\">{statement}</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SimulationResults\r\n","C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\components\\dashboard\\TextBoxCard.Component.js",[],"C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\components\\dashboard\\SimulationHistCard.Component.js",[],"C:\\Users\\CP\\Desktop\\Projects\\AISG\\Data_Visualization\\menu-eng-frontend\\src\\components\\dashboard\\TableCard.Component.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":8,"nodeType":"80","messageId":"81","endLine":1,"endColumn":12},{"ruleId":"78","severity":1,"message":"82","line":3,"column":43,"nodeType":"80","messageId":"81","endLine":3,"endColumn":47},{"ruleId":"83","severity":1,"message":"84","line":38,"column":8,"nodeType":"85","endLine":38,"endColumn":18,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":70,"column":8,"nodeType":"85","endLine":70,"endColumn":16,"suggestions":"88"},{"ruleId":"78","severity":1,"message":"89","line":1,"column":44,"nodeType":"80","messageId":"81","endLine":1,"endColumn":53},{"ruleId":"90","severity":1,"message":"91","line":2,"column":5,"nodeType":"92","messageId":"93","endLine":7,"endColumn":6},{"ruleId":"78","severity":1,"message":"94","line":2,"column":41,"nodeType":"80","messageId":"81","endLine":2,"endColumn":54},{"ruleId":"78","severity":1,"message":"95","line":14,"column":11,"nodeType":"80","messageId":"81","endLine":14,"endColumn":20},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.","ArrayExpression",["98"],"React Hook useEffect has missing dependencies: 'menu', 'name', and 'userData'. Either include them or remove the dependency array.",["99"],"'useEffect' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'CartesianGrid' is defined but never used.","'targetRef' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [name, userData]",{"range":"104","text":"105"},"Update the dependencies array to be: [menu, name, period, userData]",{"range":"106","text":"107"},[1313,1323],"[name, userData]",[2365,2373],"[menu, name, period, userData]"]